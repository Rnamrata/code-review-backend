Metadata:
- reportId
- sessionId
- filename
- language
- generatedAt
- reportVersion

Executive Summary:
- overallGrade (A-F)
- overallScore (0-100)
- status
- verdict (text summary)
- issue counts by severity

Category Scores:
- security (score, grade, weight, issues)
- quality (score, grade, weight, issues)
- complexity (score, grade, weight, issues)
- style (score, grade, weight, issues)

Detailed Issues:
- security issues array
- quality issues array
- complexity issues array
- style issues array

Recommendations:
- immediate actions (prioritized)
- improvements (grouped by category)
- AI recommendations

Action Plan:
- phase 1: critical fixes
- phase 2: quality improvements
- phase 3: polish

Metrics:
- before scores
- projected after scores

Methods needed:
- calculateOverallScore()
- getIssuesBySeverity(severity)
- getIssuesByCategory(category)
- getPrioritizedIssues()
- toJSON()
- toPDF() (future)
- validate()

Why comprehensive report model:
- Central structure for all results
- Multiple output formats (JSON, PDF)
- Consistent reporting
- Easy to extend